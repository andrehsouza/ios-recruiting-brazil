//
//  ListMoviesWireframe.swift
//  DataMovie
//
//  Created by Andre on 12/08/2018.
//  Copyright (c) 2018 Andre. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ListMoviesWireframe: BaseWireframe {

    // MARK: - Private properties -

    private let _storyboard = UIStoryboard(type: .listMovies)

    // MARK: - Module setup -

    init() {
        let moduleViewController = _storyboard.instantiateViewController(ofType: ListMoviesViewController.self)
        super.init(viewController: moduleViewController)
        
        let interactor = ListMoviesInteractor()
        let presenter = ListMoviesPresenter(wireframe: self, view: moduleViewController, interactor: interactor)
        moduleViewController.presenter = presenter
    }

}

// MARK: - Extensions -

extension ListMoviesWireframe: ListMoviesWireframeInterface {

    func navigate(to option: ListMoviesNavigationOption) {
        switch option {
        case .addMovie(let transitionDelegate, let circularTransiction, let movieListUpdateProtocol):
            _openAddMovie(transitionDelegate, circularTransiction, movieListUpdateProtocol)
            break
        case .detail(let movieEntity, let transitionDelegate):
            _openDetail(movieEntity, transitionDelegate)
            break
        }
    }
    
    private func _openAddMovie(_ transitionDelegate: UIViewControllerTransitioningDelegate, _ circularTransiction: CircularTransition, _ movieListUpdateProtocol: MovieListUpdateProtocol) {
        let addWF = AddMoviesWireframe(circularTransiction, movieListUpdateProtocol)
        show(addWF, with: .presentTransition(transitionDelegate: transitionDelegate), animated: true)
    }
    
    private func _openDetail(_ movieEntity: MovieEntity, _ imageTransition: ImageAnimatorTransition) {
        let movieDetailWF = MovieDetailWireframe(movieEntity: movieEntity, transition: imageTransition)
        show(movieDetailWF, with: .push, animated: true)
    }
    
}
