//
//  MovieDetailWireframe.swift
//  DataMovie
//
//  Created by Andre Souza on 14/08/2018.
//  Copyright (c) 2018 Andre. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class MovieDetailWireframe: BaseWireframe {

    // MARK: - Private properties -

    private let _storyboard = UIStoryboard(type: .movieDetail)

    // MARK: - Module setup -

    init(movieEntity: MovieEntity, transition: ImageAnimatorTransition) {
        let moduleViewController = _storyboard.instantiateViewController(ofType: MovieDetailViewController.self)
        super.init(viewController: moduleViewController)
        
        let interactor = MovieDetailInteractor()
        let presenter = MovieDetailPresenter(wireframe: self, view: moduleViewController, interactor: interactor, movieEntity: movieEntity, transition: transition)
        moduleViewController.presenter = presenter
    }

}

// MARK: - Extensions -

extension MovieDetailWireframe: MovieDetailWireframeInterface {

    func navigate(to option: MovieDetailNavigationOption) {
        switch option {
        case .zoomImage(let movieDetail, let transitionDelegate):
            _openZoomImage(movieDetail, transitionDelegate)
        case .personDetail(let person):
            _openPersonDetail(person)
        }
    }
    
    private func _openZoomImage(_ movieDetail: MovieViewDetail, _ imageTransition: ImageAnimatorTransition) {
        let zoomWF = ZoomImageWireframe(moviedetail: movieDetail, transition: imageTransition)
        show(zoomWF, with: .push, animated: true)
    }
    
    private func _openPersonDetail(_ personDetail: PersonDetailModel) {
        let personDetailWF = PersonDetailWireframe(personDetail: personDetail)
        show(personDetailWF, with: .push, animated: true)
    }
}
