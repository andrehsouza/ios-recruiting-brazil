//
//  SearchMoviesInterfaces.swift
//  DataMovie
//
//  Created by Andre on 26/08/2018.
//  Copyright (c) 2018 Andre. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

enum SearchMoviesNavigationOption {
}

protocol SearchMoviesWireframeInterface: WireframeInterface {
    func navigate(to option: SearchMoviesNavigationOption)
}

protocol SearchMoviesViewInterface: ViewInterface & SearchProtocol {
    func reloadData(completion: (()-> Void)?)
    func reloadData(at index: IndexPath)
    func hideErrorView()
    func showError(error: ErrorInterface, target: Any, action: Selector)
    func showFooterLoading(_ loading: Bool)
    func showTableviewLoading(_ loading: Bool)
    func showFooterUpdatedMessage(message: String)
}

protocol SearchMoviesPresenterInterface: PresenterInterface & DiscoverMovieDetailProtocol {
    func findMovie(_ queryTitle: String)
    func loadItems()
    func numberOfSections() -> Int
    func numberOfItems(in section: Int) -> Int
    func updateItemStatus(with movieID: Int, isComplete: Bool)
    func showStatus(_ status: DMButtonStatus, at indexPath: IndexPath)
    func loadPosterImage(_ imageView: UIImageView, at indexPath: IndexPath)
    func didSelectItem(at indexPath: IndexPath)
    func clearResults()
}

protocol SearchMoviesInteractorInterface: InteractorInterface {
    func find(title: String, page: Int, _ completion: @escaping (RequestResultType<DiscoverMovieListModel>) -> Void)
}

protocol SearchProtocol: AddListsProtocol {
    func findMovie(_ queryTitle: String)
    func showFooterLoading(_ loading: Bool)
    func clearResults()
}
