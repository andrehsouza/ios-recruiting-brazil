//
//  PersonDetailViewController.swift
//  DataMovie
//
//  Created by Andre Souza on 14/09/2018.
//  Copyright (c) 2018 Andre. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class PersonDetailViewController: DMBaseViewController {
    
    @IBOutlet weak var backgroundImage: UIImageView!
    @IBOutlet weak var pictureImageView: UIImageView!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var birthDateStackView: UIStackView!
    @IBOutlet weak var birthDateLabel: UILabel!
    @IBOutlet weak var biographyStackView: UIStackView!
    @IBOutlet weak var biographyLabel: UILabel!
    @IBOutlet weak var homePageStackView: UIStackView!
    @IBOutlet weak var homePageButton: UIButton!
    @IBOutlet weak var socialStackView: UIStackView!
    @IBOutlet weak var facebookButton: DMButton!
    @IBOutlet weak var twitterButton: DMButton!
    @IBOutlet weak var instagramButton: DMButton!
    @IBOutlet weak var imdbButton: DMButton!
    
    
    // MARK: - Public properties -

    var presenter: PersonDetailPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        title = "Detail"
        presenter.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.delegate = nil
    }
    
    @IBAction func touchHomePage(_ sender: Any) {
        presenter.touchHomepage()
    }
    
    @IBAction func touchSocialMediaButton(_ sender: DMButton) {
        switch sender {
        case facebookButton:
            presenter.touchFacebook()
            break
        case twitterButton:
            presenter.touchTwitter()
            break
        case instagramButton:
            presenter.touchInstagram()
            break
        case imdbButton:
            presenter.touchIMDB()
            break
        default: break
        }
    }
    
	
}

// MARK: - Extensions -

extension PersonDetailViewController: PersonDetailViewInterface {
    
    func showError(error: ErrorInterface, target: Any, action: Selector) {
        showFenceError(error: error, target: target, action: action)
    }
    
    func showLoading(_ loading: Bool) {
        if loading {
            showFenceLoading()
        } else {
            hideFenceView()
        }
    }
    
    func setBackgroundImage(_ image: UIImage?) {
        backgroundImage.image = image
    }
    
    func setCacheProfilePicture(_ image: UIImage?) {
        pictureImageView.image = image
    }
    
    func setName(_ name: String?) {
        nameLabel.text = name
    }
    
    func showInfo(personDetail: PersonDetailView) {
        presenter.loadPersonPicture(pictureImageView)
        nameLabel.text = personDetail.name
        if let birthdate = personDetail.birthdateFormatted {
            birthDateStackView.isHidden = false
            birthDateLabel.text = birthdate
        }
        if let biography = personDetail.biography, !biography.isEmpty {
            biographyStackView.isHidden = false
            biographyLabel.text = biography
        }
        if let homepage = personDetail.homepage {
            homePageStackView.isHidden = false
            let titleAttr: [NSAttributedString.Key : Any] = [.font: UIFont(type: .regular, size: 15),
                                                            .foregroundColor: UIColor.white,
                                                            .underlineStyle: 1]
            let buttonTitleAttr = NSMutableAttributedString(string: homepage, attributes: titleAttr)
            homePageButton.setAttributedTitle(buttonTitleAttr, for: .normal)
        }
        if let externalIds = personDetail.externalIds {
            if let _ = externalIds.facebookID {
                facebookButton.isHidden = false
                socialStackView.isHidden = false
            }
            if let _ = externalIds.twitterID {
                twitterButton.isHidden = false
                socialStackView.isHidden = false
            }
            if let _ = externalIds.instagramID {
                instagramButton.isHidden = false
                socialStackView.isHidden = false
            }
            if let _ = externalIds.imdbID {
                imdbButton.isHidden = false
                socialStackView.isHidden = false
            }
        }
    }
    
}
